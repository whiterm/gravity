# -*- mode: ruby -*-
# vi: set ft=ruby :

# Parts of this file are taken from https://github.com/kubernetes/kubernetes/blob/master/Vagrantfile

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Require a recent version of vagrant otherwise some have reported errors setting host names on boxes
Vagrant.require_version ">= 1.7.4"

$vm_cpus = (ENV['VAGRANT_NODE_CPU'] || 0).to_i
# Determines how many cpus the virtual machine should be given. Uses half of
# what's available on the host with a default of 4.
def numvcpus
  begin
    os_cpu_cores / 2
  rescue
    4
  end
end

# Get the number of logical cpu cores.
def os_cpu_cores
  case RbConfig::CONFIG['host_os']
  when /darwin/
    Integer(`sysctl -n hw.ncpu`)
  when /linux/
    Integer(`cat /proc/cpuinfo | grep processor | wc -l`)
  else
    raise StandardError, "Unsupported platform"
  end
end

if $vm_cpus == 0
  $vm_cpus = numvcpus
end

# RAM to use for nodes in MB
$vm_node_mem = (ENV['VAGRANT_NODE_RAM'] || 3000).to_i

# Size of automatically attached disk devices (20Gb by default)
$vm_device_size = (ENV['VAGRANT_DEVICE_SIZE'] || 20).to_i

# Number of additional disks automatically created and attached (1 by default)
$vm_device_number = (ENV['VAGRANT_DEVICE_NUMBER'] || 1).to_i

# Box to boot
$vm_box = ENV['VAGRANT_BOX'] || 'centos/7'

# Number of instances to start
$instances = (ENV['VAGRANT_INSTANCES'] || 3).to_i

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  def attach_libvirt_media(box, node_name, device, size)
    path = "#{node_name}_#{device}.qcow2"
    box.storage :file, :size => size, :path => path, :allow_existing => false
  end

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = $vm_box
  # Execute command to install the plugin: "vagrant plugin install vagrant-disksize"
  config.disksize.size = '50GB'

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  config.vm.synced_folder './', '/vagrant'

  (1..$instances).each do |i|
    node_name = "node-%d" % i
    config.vm.define node_name do |node|
      node.vm.hostname = node_name
      node.vm.network "private_network", ip: "172.28.128.#{i+100}", libvirt__forward_mode: "nat" # eth0
      node.vm.network "private_network", ip: "172.29.128.#{i+100}", libvirt__forward_mode: "nat" # eth1

      node.vm.provider "libvirt" do |libvirt|
        libvirt.cpus = $vm_cpus
        libvirt.memory = $vm_node_mem
        libvirt.cpu_model = "host"
        libvirt.volume_cache = "none"
        (1..$vm_device_number).each do |i|
            attach_libvirt_media(libvirt, node_name, i.times { "vdb".next }, $vm_device_size) # /var/lib/gravity and additional empty disks
        end
      end
      node.vm.provider "virtualbox" do |vb|
        vb.name = node.vm.hostname
        vb.cpus = $vm_cpus
        vb.memory = $vm_node_mem
      end
      if i == $instances
        node.vm.provision :ansible do |ansible|
          ansible.limit = "all"
          ansible.playbook = "ansible/vagrant-provision.yaml"
        end
      end
    end
  end
end
